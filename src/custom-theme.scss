// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$teco-palette: (
    50: #e0f2f0,
    100:#b2dfd8,
    200:#80cbc0,
    300:#4db6a7,
    400:#26a694,
    500:#009682,
    600:#008975,
    700:#007966,
    800:#006957,
    900:#004d3c,
    contrast: (
        50: rgba(black, 0.87),
        100:rgba(black, 0.87),
        200:rgba(black, 0.87),
        300:rgba(black, 0.87),
        400:rgba(black, 0.87),
        500:white,
        600:white,
        700:white,
        800:white,
        900:white
    )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$pwa-primary: mat.define-palette($teco-palette);
$pwa-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$pwa-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$pwa-theme: mat.define-light-theme((
    color: (
        primary: $pwa-primary,
        accent: $pwa-accent,
        warn: $pwa-warn,
    )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($pwa-theme);

